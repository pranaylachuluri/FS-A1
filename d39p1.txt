/*
David gives a task to his student Amber. He provides an integer nRows, and asks 
Amber to return the first nRows of Pascalâ€™s triangle. In Pascal's triangle, 
each number is the sum of the two numbers directly above it. Your task is to 
help Amber in her task.

Sample test case
case=1
input=5
output=[[1], [1, 1], [1, 2, 1], [1, 3, 3, 1], [1, 4, 6, 4, 1]]
*/

import java.util.*;
class p1{
    public static void main(String args[]){
        Scanner sc=new Scanner(System.in);
        int n=sc.nextInt();
        System.out.println(generate(n));
    }
        
    static List<List<Integer>> generate(int numRows) {
        List<List<Integer>> result= new ArrayList<>();
        int n=numRows;
        int dp[][] = new int [n+1][n+1];
        for(int r=0;r<numRows;r++){
            List<Integer> curr = new ArrayList<>();
            for(int c=0;c<=r;c++){
                int value=calc(r,c,dp);
                curr.add(value);
            }
            result.add(curr);
        }
        return result;
    }
    public static int calc(int r,int c,int [][]dp){
        if(c==0 || c==r) return 1;
        if(dp[r][c]!=0) return dp[r][c];
        return dp[r][c]=calc(r-1,c-1,dp)+calc(r-1,c,dp);
    }
}
    